--- !ruby/hash:Moped::BSON::Document
avg_user_rating: 4.297932816537467
classification: :game
created_at: 2012-09-20 00:19:22.000000000 Z
domain: :freestyle
down_votes: 84
entry: 在这个项目中，我们将会构建一个程序，该程序在一段文本中搜索你的名字，
  如果找到，则将其替换成“redacted”（“Redacted”，美国电影。中文译名为“节选修订”）。就这样，你变成了一个间谍！
feedback_total: 21
is_project: false
language_id: !ruby/object:Moped::BSON::ObjectId
  raw_data: !binary |-
    TyFOXyFuzxlcRMGV
level: :beginner
locale: zh
name: 节选修订！
num_exercises: 6
num_published_exercises: 6
num_published_sections: 1
num_readiness_feedbacks: 28
num_sections: 1
num_user_ratings: 1935
published: true
published_at: 2012-09-20 03:26:02.000000000 Z
rating: 103.62170831835473
read_feedback_total: 9
readiness: 95.03703703703702
recommended: false
review_status: :approved
roles:
  manager: []
  editor: []
topic_id: !ruby/object:Moped::BSON::ObjectId
  raw_data: !binary |-
    T5Ws8pVtgwADABwX
total_user_rating: 8316.5
up_votes: 202
updated_at: 2012-11-26 16:43:06.258000000 Z
user_id: !ruby/object:Moped::BSON::ObjectId
  raw_data: !binary |-
    TwTxhHBXEgADAGwS
sections:
- !ruby/hash:Moped::BSON::Document
  created_at: 2012-09-20 00:19:22.000000000 Z
  default_view: console_and_editor
  entry: 将一段文本拆分为一个单词数组，然后迭代这个数组，
    我们就可以找出特定的单词并将其修改，使得最终向控制台打印的是修改后的文本。
  exercises:
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFphC7GlKQACAHKh
    created_at: 2012-09-20 00:19:23.000000000 Z
    default_code: ! "puts \"待搜索的英文文本：\"\ntext = gets.chomp\nputs \"要修订的英文单词：
      \"\nredact = gets.chomp\n\nwords = text.split(\" \")\n\nwords.each
      do |word|\n  if word != redact\n    print word + \" \"\n  else\n    print \"REDACTED
      \"\n  end\nend"
    entry: ! '信息隐藏是编程的一个重要组成部分：
      保护密码、建立安全连接以及保护程序免遭篡改，这些都有赖于对信息访问进行控制。


      我们目前还不能真正深入到信息隐藏技术中去，这需要我们后面将学到的关于 **哈希表** 的知识。
      但是我们 *可以* 写一个简单的程序来修改用户的输入，使用到的工具是：数组和迭代器。'
    expect_error: false
    feedback_stats:
      other: 2
      total: 2
    from_console: false
    hint: ''
    instruction: 单击Run来测试我们的修订程序，然后思考一下如何自己实现这些功能。
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: false
    name: 你将要实现的功能
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: return true
    updated_at: 2012-10-21 14:32:27.649000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFphJUssoAACAHo4
    created_at: 2012-09-20 00:19:49.000000000 Z
    default_code: ''
    entry: ! '首先，我们需要获取用户输入。'
    expect_error: false
    feedback_stats:
      other: 2
      total: 2
    from_console: false
    hint: ''
    instruction: 使用`puts`向用户提示两次输入。第一次声明一个`text`变量，并通过`gets.chomp`将用户输入的值赋给它；
      第二次声明一个`redact`变量，并通过`gets.chomp`将用户输入的值赋给它。
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: false
    name: 获取用户输入
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: ! "if code == nil\n  return \"貌似你没有写任何代码！\"\nend\n\nbegin\n
      \ text\nrescue NameError\n  return \"你声明了一个名叫text的变量吗？\"\nend\n\nbegin\n
      \ redact\nrescue NameErrorf\n  return \"你声明了一个名叫redact的变量吗？\"\nend\n\nif
      code.scan(\"puts\").length < 2 || prints.length == 0\n  return \"貌似你没有使用'puts'向控制台打印两次用户提示。\"\nend\n\nif
      code.scan(\"gets.chomp\").length < 2\n  return \"确保使用两次gets.chomp来获取用户的输入：
      第一次是待搜索文本，第二次是要修改的单词或短语。\"\nend\n\nreturn true"
    updated_at: 2012-10-26 14:24:13.771000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFphJgRSlwACAHO4
    created_at: 2012-09-20 00:19:50.000000000 Z
    default_code: ''
    entry: ! "接下来，我们将要把用户输入的文本拆分成一个个单词。\n\n
      Ruby有一个内置的方法`.split`，该方法的参数是一个字符串，返回一个数组。
      如果我们在其括弧内放一个字符串，`.split`方法将会以这个字符串为分界，
      将文本拆分，这个分界的字符串称为 **分隔符** 。
      例如：\n\n
      \   text.split(\",\")\n\n
      告诉Ruby以逗号为分界将`text`拆分。"
    expect_error: false
    feedback_stats:
      typo: 1
      total: 3
      other: 1
      correctness_test_issue: 1
    from_console: false
    hint: ''
    instruction: 声明一个名叫`words`的变量，然后将其赋值为`text`调用`.split`方法所产生的结果。
      向`.split`传入一个空格（`" "`）参数作为分隔符，这样我们就得到一个由`text`的单词组成的数组。
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: true
    name: .split方法
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: ! "begin\n  words\nrescue NameError\n  return \"你声明了一个名叫words的变量吗？
      \"\nend\n\nif code.scan(\".split\").length == 0\n  return
      \"确保在你的代码中使用.split方法。\"\nend\n\nunless words.is_a?
      Array\n  return \"貌似你没有使用.split方法来生成单词数组。\"\nend\n\nreturn true"
    updated_at: 2012-10-03 16:02:22.000000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFphJ4/5yQACAG0C
    created_at: 2012-09-20 00:19:51.000000000 Z
    default_code: ''
    entry: 很好！是时候使用迭代器来遍历我们的文本了。
    expect_error: false
    feedback_stats:
      correctness_test_issue: 2
      total: 7
      instructional_text_issue: 3
      other: 2
    from_console: false
    hint: ! "记住，`.each`的语法是：\n\n    array.each { |占位符|
      动作 }\n\n 或者是： \n\n    array.each do |占位符|\n      动作\n
      又一个动作\n      再来一个动作！\n    end"
    instruction: ! '让我们先从简单的入手：写一个`.each`循环遍历`words`，使用`print`将每个单词打印出来。'
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: true
    name: 节选修订！
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: ! "if exception.kind_of? SyntaxError\n  return \"貌似你的语法不大正确——
      如需帮助可查看提示。\"\nend\n\nif code.scan(\".each\").length
      == 0\n  return \"确保在你的代码里使用.each！\"\nend\n\nif prints.length
      == 0\n  return \"貌似你没有向控制台打印任何东西。\"\nend\n\noutput
      = \"\"\nwords.each { |word| output += word }\n\nunless prints.include? output\n
      \ return \"貌似你没有向控制台打印用户输入文本中的每个单词。\"\nend\n\nreturn true"
    updated_at: 2012-10-21 15:37:49.303000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFphKLVyRwACAIAi
    created_at: 2012-09-20 00:19:52.000000000 Z
    default_code: ''
    entry: ! '好！但是我们的输入还有两个问题：1. 单词之间没有空格；
      2. 我们的程序并没有将我们想要修订的单词替换成`"REDACTED"`。


      我们可以用`if`/`else`语句来解决这些问题！'
    expect_error: false
    feedback_stats:
      correctness_test_issue: 2
      total: 3
      other: 1
    from_console: false
    hint: ! "记住，`if`/`else`的语法是这样的：\n\n    if condition\n
      执行这个动作\n    else\n      执行另一个动作\n    end"
    instruction: 在`.each`循环内部添加一个`if`/`else`语句：如果当前单词不是要修订的单词，
      则打印该单词加上`" "`；否则，打印`"REDACTED "`（后面的空格确保了"REDACTED"与后续单词的间隔）。
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: true
    name: 控制流秘籍
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: ! "if exception.kind_of? SyntaxError\n  return \"貌似你的语法不大正确——
      如需帮助可查看提示。\"\nend\n\noutput = \"\"\nwords.each
      do |word|\n  if word != redact\n    output += word + \" \"\n  else\n    output
      += \"REDACTED \"\n  end\nend\n\nunless prints.include? output\n  return \"
      确保把用户输入文本中的每个单词打印到控制台，除非这个单词是要修订的单词；
      如果是要修订的单词，则打印REDACTED（全部大写！）。\"\nend\n\nreturn
      true"
    updated_at: 2012-11-19 16:54:59.609000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFphKk1HYwACAHen
    created_at: 2012-09-20 00:19:54.000000000 Z
    default_code: ''
    entry: ! 'Perfect! Feel free to mess around with your redactor to see what sorts
      of results you get. Think about the following:


      * What could you do to make sure your redactor redacts a word regardless of
      whether it''s upper case or lower case?

      * How could you make your program take multiple, separate words to REDACT?

      * How might you make a new redacted string and save it as a variable, rather
      than just printing it to the console?'
    expect_error: false
    feedback_stats:
      typo: 3
      total: 4
      instructional_text_issue: 1
    from_console: false
    hint: ''
    instruction: These are the questions. In the meantime, click Run to finish this
      REDACTED.
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: true
    name: Great Work!
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: return true
    updated_at: 2012-10-28 10:56:50.622000000 Z
    view: console_and_editor
  feedback_total: 21
  index: 0
  language_id: !ruby/object:Moped::BSON::ObjectId
    raw_data: !binary |-
      TyFOXyFuzxlcRMGV
  name: Iteration Obfuscation
  num_forum_answers: 38
  num_forum_questions: 22
  published: true
  read_feedback_total: 3
  updated_at: 2012-11-19 16:54:59.655000000 Z
  user_id: !ruby/object:Moped::BSON::ObjectId
    raw_data: !binary |-
      TwTxhHBXEgADAGwS
  viewable: false
