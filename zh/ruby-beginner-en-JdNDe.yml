--- !ruby/hash:Moped::BSON::Document
avg_user_rating: 4.312008210742388
classification: :game
created_at: 2012-09-19 19:17:37.000000000 Z
domain: :freestyle
down_votes: 58
entry: 使用控制流，我们可以修改用户的输入，然后将其返回。
  在这个项目中，我们会使其变成像达菲鸭！
feedback_total: 55
is_project: false
language_id: !ruby/object:Moped::BSON::ObjectId
  raw_data: !binary |-
    TyFOXyFuzxlcRMGV
level: :beginner
locale: zh
name: Thith Meanth War!
num_exercises: 8
num_published_exercises: 8
num_published_sections: 1
num_readiness_feedbacks: 52
num_sections: 1
num_user_ratings: 2923
published: true
published_at: 2012-09-20 03:25:38.000000000 Z
rating: 351.18693174869895
read_feedback_total: 23
readiness: 88.45945945945945
recommended: false
review_status: :approved
roles:
  manager: []
  editor: []
submitted_at: 2012-09-20 01:47:06.000000000 Z
topic_id: !ruby/object:Moped::BSON::ObjectId
  raw_data: !binary |-
    T5Ws8pVtgwADABwX
total_user_rating: 12604.0
up_votes: 441
updated_at: 2012-11-26 16:22:24.982000000 Z
user_id: !ruby/object:Moped::BSON::ObjectId
  raw_data: !binary |-
    TwTxhHBXEgADAGwS
sections:
- !ruby/hash:Moped::BSON::Document
  created_at: 2012-09-19 19:17:37.000000000 Z
  default_view: console_and_editor
  entry: 将我们的控制流知识和Ruby丰富的方法库结合起来，我们只需几行代码便完成大量工作。
  exercises:
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFoaUpro+AACA+Ev
    created_at: 2012-09-19 19:17:38.000000000 Z
    default_code: ! "print \"Thtring, pleathe!: \"\nuser_input = gets.chomp\nuser_input.downcase!\n\nif
      user_input.include? \"s\"\n  user_input.gsub!(/s/, \"th\")\nelse\n  puts \"这儿什么也不做！
      \"\nend\n  \nputs \"你的字符串是：#{user_input}\""
    entry: ! '由于我们可以使用`if` / `else`语句改变程序流向，
      那么我们就可以根据不同的用户输入产生不同的结果。


      在这个项目中，我们把控制流和一些新的Ruby字符串方法结合起来，Daffy Duckify用户的字符串，将每个`"s"`变成`"th"`。'
    expect_error: false
    feedback_stats:
      positive_feedback: 2
      total: 4
      correctness_test_issue: 1
      typo: 1
    from_console: false
    hint: ''
    instruction: 单击Run来看看Daffy Duckifier的运行，然后准备开始打造你自己的！
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: false
    name: 你即将要建造的东西
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: return true
    updated_at: 2012-11-08 16:48:44.467000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFobaa34sgACA+1B
    created_at: 2012-09-19 19:22:17.000000000 Z
    default_code: ''
    entry: 首先，我们要使用`print`打印一个信息来提示用户输入，然后使用`gets.chomp`将输入的内容赋值到一个变量。
    expect_error: false
    feedback_stats:
      correctness_test_issue: 2
      total: 3
      other: 1
    from_console: false
    hint: ''
    instruction: ! '1. 使用`print`向用户提示输入。

      2. 声明一个名叫`user_input`的变量，然后使用`gets.chomp`将用户的输入赋值给这个变量。'
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: false
    name: 获取用户输入
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: ! "begin\n  user_input\nrescue NameError\n  return \"你声明了一个名叫user_input的变量吗？
      \"\nend\n\nif code.scan(\"print\").length == 0
      || prints.length == 0\n  return \"确保使用print关键字来向用户打印提示。
      \"\nend\n\nif code.scan(\"gets.chomp\").length == 0\n
      \ return \"确保使用gets.chomp来获取用户输入。\"\nend\n\nif
      exception.kind_of? SyntaxError\n  return \"你的语法貌似不大正确。如需帮助可查看第一个练习！
      \"\nend\n\nreturn true"
    updated_at: 2012-10-11 15:00:22.284000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFobaa34sgACA+1D
    created_at: 2012-09-19 19:22:17.000000000 Z
    default_code: ''
    entry: 我们要确保将用户输入中的`"S"`和`"s"`都捕获。
      当然，我们可以使用各自的`if` / `else`语句来处理，但是我们还可以使用
      `.downcase!`来将用户输入的内容都转换为小写。这样，我们就只需要搜索`"s"`。
    expect_error: false
    feedback_stats:
      correctness_test_issue: 2
      total: 4
      instructional_text_issue: 2
    from_console: false
    hint: ''
    instruction: 对`user_input`调用`.downcase!`方法。确保不要漏掉
      `!`，这样才能修改字符串本身；否则，Ruby会创建一个`user_input`的副本并修改它。
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: true
    name: 转换为小写！
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: ! "if exception.kind_of? SyntaxError\n  return \"你的语法貌似不大正确。
      如需帮助可查看第一个练习！\"\nend\n\nif
      code.scan(\".downcase!\").length == 0\n  return \"确保对user_input调用.downcase!方法。\"\nend\n\nreturn true"
    updated_at: 2012-10-02 18:55:26.000000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFobaqnplwACBBib
    created_at: 2012-09-19 19:22:18.000000000 Z
    default_code: ''
    entry: ! "All right! Time to add in a little control flow.\n\nFor the `if` half
      of our branch, we want to check whether the user's input contains an `\"s\"`.
      We can do that using Ruby's `.include?` method, which evaluates to `true` if
      it finds what it's looking for and `false` otherwise. (As a general rule, Ruby
      methods that end with `?` evaluate to the boolean values `true` or `false`.)\n\nThe
      syntax looks like this:\n\n    if string_to_check.include? \"substring\"\n\nWe
      want to check `user_input` for the substring `\"s\"`."
    expect_error: false
    feedback_stats:
      other: 2
      total: 9
      instructional_text_issue: 2
      correctness_test_issue: 5
    from_console: false
    hint: Feel free to peek back at the first exercise if you need help.
    instruction: Write an `if` statement in the editor. It should check to see if
      `user_input` includes `"s"`. For now, have it print a string of your choice
      to the console if it finds `"s"`.
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: true
    name: Setting Up the 'If' Branch, Part 1
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: ! "if exception.kind_of? SyntaxError\n  return \"It looks like
      your 'if' statement syntax isn't quite right. Don't forget to end it with an
      'end'!\"\nend\n\nif code.scan(\"if\").length == 0\n  return \"Make sure to include
      an 'if' statement.\"\nend\n\nunless code =~ /user_input\\.include\\?\\(?\\s*[\"']s[\"']\\s*\\)?/\n
      \ return \"Don't forget to call .include? on user_input.\"\nend\n\nreturn true"
    updated_at: 2012-11-10 17:08:30.203000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFofIpro+AACBC6k
    created_at: 2012-09-19 19:38:10.000000000 Z
    default_code: ''
    entry: ! "Good! Now let's complete our `if` statement.\n\nWhen we find `\"s\"`,
      we want Ruby to replace every instance of `\"s\"` it finds with `\"th\"`. We
      can do this with the `.gsub!` method, which stands for **g**lobal **sub**stitution.\n\nThe
      syntax looks like this:\n\n    string_to_change.gsub!(/s/, \"th\")\n\nWhen we
      get to later lessons, we'll explain why the `/s/` has to be between slashes
      instead of between quotes. Note: you *cannot* put a space between `gsub!` and
      the bit in parentheses.\n\nRemember, you want the `!` at the end of the method
      name so that Ruby will change the string in-place."
    expect_error: false
    feedback_stats:
      instructional_text_issue: 3
      total: 3
    from_console: false
    hint: ''
    instruction: Remove the print statement you added to your `if` statement and replace
      it with a call to `.gsub!` on `user_input`. Have it replace `/s/` with `"th"`.
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: true
    name: Setting Up the 'If' Branch, Part 2
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: ! "if exception.kind_of? SyntaxError\n  return \"It looks like
      your syntax isn't quite right. Feel free to look back at the syntax in the first
      exercise if you need help!\"\nend\n\nunless code =~ /user_input\\.gsub!\\(?\\s*\\/s\\/\\s*,\\s*['\"]th['\"]\\s*\\)?/\n
      \ return \"Make sure you're using .gsub! to replace every 's' with 'th'.\"\nend\n\nreturn
      true"
    updated_at: 2012-10-15 17:51:34.501000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFoba0GIOQACA+hf
    created_at: 2012-09-19 19:22:19.000000000 Z
    default_code: ''
    entry: The hard part's over! Now we just need to let the user know if we don't
      find any instances of the letter "s".
    expect_error: false
    feedback_stats:
      correctness_test_issue: 1
      total: 2
      other: 1
    from_console: false
    hint: ''
    instruction: Add an `else` statement that displays a string to the user to let
      them know if there are no "s"s in their string.
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: true
    name: Setting Up the 'Else' Branch
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: ! "if exception.kind_of? SyntaxError\n  return \"It looks like
      your syntax isn't quite right. Check the first exercise if you need help!\"\nend\n\nif
      code.scan(\"else\").length == 0\n  return \"Make sure to add an else statement!\"\nend\n\nif
      prints.length == 0\n  return \"It doesn't look like you printed anything to
      the console.\"\nend\n\nreturn true"
    updated_at: 2012-11-10 17:18:12.080000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFoba634sgACA+2A
    created_at: 2012-09-19 19:22:19.000000000 Z
    default_code: ''
    entry: ! "Home stretch—now we want to display the Daffy Duckified string to the
      user. You can do that using the string interpolation we learned earlier:\n\n
      \   my_string = \"muchachos\"\n    print \"Adios, #{my_string}!\"\n    # ==>
      \"Adios, muchachos!\"\n"
    expect_error: false
    feedback_stats:
      instructional_text_issue: 7
      total: 16
      correctness_test_issue: 7
      other: 2
    from_console: false
    hint: ''
    instruction: Add a `puts` statement that uses string interpolation to show the
      user their transformed string.
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: true
    name: Returning the Final String—Er, "Thtring"
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: ! "if exception.kind_of? SyntaxError\n  return \"It looks like
      your syntax isn't quite right. Check the first exercise if you need help!\"\nend\n\nif
      code.scan(\"puts\").length == 0\n  return \"Make sure to show the user their
      transformed string using 'puts'.\"\nend\n\nunless prints.grep(user_input)\n
      \ return \"It looks like you didn't print out the user_input string.\"\nend\n\nreturn
      true"
    updated_at: 2012-11-10 17:21:28.603000000 Z
    view: console_and_editor
  - _id: !ruby/object:Moped::BSON::ObjectId
      raw_data: !binary |-
        UFobbYqTxQACBAOl
    created_at: 2012-09-19 19:22:21.000000000 Z
    default_code: ''
    entry: ! 'Great work!


      How might you improve this project? You could:


      * Add an additional `if` statement to re-prompt the user for input if they don''t
      enter anything

      * Think about how you might account for words in which the letter "c" sounds
      like an "s"

      * Think about how you might preserve the user''s original capitalization'
    expect_error: false
    feedback_stats:
      other: 4
      total: 14
      correctness_test_issue: 5
      positive_feedback: 5
    from_console: false
    hint: ''
    instruction: Enough pondering for now. When you're ready, click Run to complete
      this project.
    library:
    - https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js
    load_submission_from_previous_exercise: true
    name: Congratulationth!
    solution_code: ''
    solution_entry: ''
    tabs: []
    test_functions: return true
    updated_at: 2012-10-21 23:58:57.458000000 Z
    view: console_and_editor
  feedback_total: 55
  index: 0
  language_id: !ruby/object:Moped::BSON::ObjectId
    raw_data: !binary |-
      TyFOXyFuzxlcRMGV
  name: Thtrings & Things
  num_forum_answers: 30
  num_forum_questions: 21
  published: true
  read_feedback_total: 3
  updated_at: 2012-11-10 17:21:28.625000000 Z
  user_id: !ruby/object:Moped::BSON::ObjectId
    raw_data: !binary |-
      TwTxhHBXEgADAGwS
  viewable: false
